"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.contenthash = exports.decodeContenthashResult = exports.encodeContenthashParams = exports.FN_SELECTOR = void 0;
const read_contract_js_1 = require("../../../../../transaction/read-contract.js");
const encodeAbiParameters_js_1 = require("../../../../../utils/abi/encodeAbiParameters.js");
const viem_1 = require("viem");
exports.FN_SELECTOR = "0xbc1c58d1";
const FN_INPUTS = [
    {
        type: "bytes32",
        name: "name",
    },
];
const FN_OUTPUTS = [
    {
        type: "bytes",
    },
];
/**
 * Encodes the parameters for the "contenthash" function.
 * @param options - The options for the contenthash function.
 * @returns The encoded ABI parameters.
 * @extension ENS
 * @example
 * ```ts
 * import { encodeContenthashParams } "thirdweb/extensions/ens";
 * const result = encodeContenthashParams({
 *  name: ...,
 * });
 * ```
 */
function encodeContenthashParams(options) {
    return (0, encodeAbiParameters_js_1.encodeAbiParameters)(FN_INPUTS, [options.name]);
}
exports.encodeContenthashParams = encodeContenthashParams;
/**
 * Decodes the result of the contenthash function call.
 * @param result - The hexadecimal result to decode.
 * @returns The decoded result as per the FN_OUTPUTS definition.
 * @extension ENS
 * @example
 * ```ts
 * import { decodeContenthashResult } from "thirdweb/extensions/ens";
 * const result = decodeContenthashResult("...");
 * ```
 */
function decodeContenthashResult(result) {
    return (0, viem_1.decodeAbiParameters)(FN_OUTPUTS, result)[0];
}
exports.decodeContenthashResult = decodeContenthashResult;
/**
 * Calls the "contenthash" function on the contract.
 * @param options - The options for the contenthash function.
 * @returns The parsed result of the function call.
 * @extension ENS
 * @example
 * ```ts
 * import { contenthash } from "thirdweb/extensions/ens";
 *
 * const result = await contenthash({
 *  name: ...,
 * });
 *
 * ```
 */
async function contenthash(options) {
    return (0, read_contract_js_1.readContract)({
        contract: options.contract,
        method: [exports.FN_SELECTOR, FN_INPUTS, FN_OUTPUTS],
        params: [options.name],
    });
}
exports.contenthash = contenthash;
//# sourceMappingURL=contenthash.js.map