import type { BaseTransactionOptions } from "../../transaction/types.js";
import type { getListing } from "./__generated__/IDirectListings/read/getListing.js";
import type { getAuction } from "./__generated__/IEnglishAuctions/read/getAuction.js";
import type { DirectListing, EnglishAuction } from "./types.js";
/**
 * @internal
 */
export declare function mapDirectListing(options: BaseTransactionOptions<{
    latestBlock: {
        timestamp: bigint;
    };
    rawListing: Awaited<ReturnType<typeof getListing>>;
}>): Promise<DirectListing>;
/**
 * @internal
 */
export declare function mapEnglishAuction(options: BaseTransactionOptions<{
    latestBlock: {
        timestamp: bigint;
    };
    rawAuction: Awaited<ReturnType<typeof getAuction>>;
}>): Promise<EnglishAuction>;
/**
 * @internal
 */
export declare function getAllInBatches<const T>(fn: (start: bigint, end: bigint) => Promise<T>, options: {
    start: bigint;
    end: bigint;
    maxSize: bigint;
}): Promise<T[]>;
//# sourceMappingURL=utils.d.ts.map